@startuml
'https://plantuml.com/class-diagram
skinparam style strictuml
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
hide empty members

Class western.Boisson{

+ Boisson(java.lang.String,western.Genre)(java.lang.String nom, western.Genre genre)

+ getNom() : String
+ getGenre() : Genre
+ getNomAvecArticleIndefini() : String
+ getNomAvecArticlePartitif() : String
+ getNomAvecArticleDefini() : String
+ getNomAvecPreposition() : String

}
western.Boisson -- western.Substantif
western.Boisson -- western.Boisson


Class western.Brigand{
- recompense
- estLibre

+ Brigand(java.lang.String)(java.lang.String nom)
+ Brigand(java.lang.String,western.Boisson)(java.lang.String nom, western.Boisson boisson)
+ Brigand(java.lang.String,western.Boisson,java.lang.String)(java.lang.String nom, western.Boisson boisson, java.lang.String look)

+ getLook() : String
+ getRecompense() : ()int
+ estLibre() : ()boolean
+ kidnapper()
+ seFaireCapturer()
+ seFaireTirerDessus()
+ getPseudo() : String
+ getCaptives() : Dame[*]
+ sePresenter()
+ getBoissonParDefaut() : Boisson
+ setBoissonParDefaut()

}
western.Brigand - western.Dame
western.Brigand -- western.Cowboy
western.Brigand -- western.Boisson

western.Brigand ---|> western.Personnage
Class western.CasDeTestStandard{

+ CasDeTestStandard()()

+ beforeAll()
+ beforeEach()
+ testMethod1()
+ testMethod2()
+ testMethod3()
+ testMethod4()
+ testMethod5()
+ afterEach()
+ afterAll()

}


Class western.Cowboy{
- gains

+ Cowboy(java.lang.String)(java.lang.String nom)
+ Cowboy(java.lang.String,western.Boisson)(java.lang.String nom, western.Boisson boisson)

+ getPseudo() : String
+ liberer()
+ liberer()
+ capturer()
+ tirerSur()
+ sePresenter()
+ getBoissonParDefaut() : Boisson
+ setBoissonParDefaut()

}
western.Cowboy - western.HorsLaLoi
western.Cowboy -- western.Boisson

western.Cowboy ---|> western.Personnage
Class western.Dame{
- estLibre

+ Dame(java.lang.String)(java.lang.String nom)
+ Dame(java.lang.String,western.Boisson)(java.lang.String nom, western.Boisson boisson)

+ getPseudo() : String
+ seFaireKidnapper()
+ seFaireLiberer()
+ estLibre() : ()boolean
+ sePresenter()
+ getBoissonParDefaut() : Boisson
+ setBoissonParDefaut()
+ getRavisseur() : HorsLaLoi

}
western.Dame -- western.Cowboy
western.Dame -- western.HorsLaLoi
western.Dame -- western.Boisson

western.Dame ---|> western.Personnage
Enum western.Genre<<enum>> {
FEMININ
MASCULIN

}
Class western.Histoire4{

+ Histoire4()()

+ main()

}


Interface western.HorsLaLoi<<interface>> {
}
Class western.Narrateur{

+ Narrateur()()
+ Narrateur(java.lang.String)(java.lang.String nom)

+ dire()
+ boire()
+ boire()
+ getPseudo() : String

}

western.Narrateur ---|> western.Personnage
Interface western.Nommable<<interface>> {
}
Class western.Personnage{

+ Personnage(java.lang.String)(java.lang.String nom)
+ Personnage(java.lang.String,western.Boisson)(java.lang.String nom, western.Boisson boisson)

+ dire()
+ sePresenter()
+ boire()
+ boire()
+ getNom() : String
+ getBoisson() : Boisson
+ getPseudos() : Strin[*]
+ getBoissonParDefaut() : Boisson

}
western.Personnage -- western.Boisson
western.Personnage -- western.Boisson


Class western.Ripou{

+ Ripou(java.lang.String)(java.lang.String nom)
+ Ripou(java.lang.String,western.Boisson)(java.lang.String nom, western.Boisson boisson)
+ Ripou(java.lang.String,western.Boisson,java.lang.String)(java.lang.String nom, western.Boisson boisson, java.lang.String look)

+ getLook() : String
+ estLibre() : ()boolean
+ getRecompense() : ()int
+ kidnapper()
+ getCaptives() : Dame[*]
+ seFaireCapturer()
+ seFaireTirerDessus()
+ getPseudo() : String
+ sePresenter()
+ liberer()

}
western.Ripou -- western.Brigand

western.Ripou ---|> western.Cowboy
Class western.Substantif{

+ Substantif(java.lang.String,western.Genre)(java.lang.String nom, western.Genre genre)

+ getNom() : String
+ getGenre() : Genre
+ toString() : String
+ isVowel() : (char)boolean
+ startsWithVowel() : String)boolean
+ getArticleIndefini() : String
+ avecArticleIndefini() : String
+ getArticleDefini() : String
+ getArticleDefini() : String
+ avecArticleDefini() : String
+ faireElision() : String
+ elision() : ()boolean
+ getArticlePartitif() : String
+ avecArticlePartitif() : String
+ avecElision() : String
+ avecPreposition() : String

}
western.Substantif -- western.Genre


Class western.test{

+ test()()


}


@enduml

