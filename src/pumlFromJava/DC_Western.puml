@startuml
'https://plantuml.com/class-diagram
skinparam style strictuml
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
hide empty members

'''DCA + 
Class western.Boisson{
{read only} - substantif: Substantif
{static} + EAU: Boisson
+ getNom(): String
+ getGenre(): Genre
+ getNomAvecArticleIndefini(): String
+ getNomAvecArticlePartitif(): String
+ getNomAvecArticleDefini(): String
+ getNomAvecPreposition(preposition: String): String

}
western.Boisson -- western.Substantif
western.Boisson -- western.Boisson


Class western.Brigand{
{static} # LOOK_PAR_DEFAUT: String
- look: String
- recompense: int
- estLibre: boolean
- captives: Dame[*]
- gardien: Cowboy
+ getLook(): String
+ getRecompense(): int
+ estLibre(): boolean
+ kidnapper(dame: Dame)
+ seFaireCapturer(cowBoy: Cowboy)
+ seFaireTirerDessus(cowBoy: Cowboy)
+ getPseudo(): String
+ getCaptives(): Dame[*]
+ sePresenter()
{static} - boissonParDefaut: Boisson
{static} + getBoissonParDefaut(): Boisson
{static} + setBoissonParDefaut(boisson: Boisson)

}
western.Brigand - western.Dame
western.Brigand -- western.Cowboy
western.Brigand -- western.Boisson

western.Brigand ---|> western.Personnage
Class western.CasDeTestStandard{
{static} + beforeAll()
+ beforeEach()
+ testMethod1()
+ testMethod2()
+ testMethod3()
+ testMethod4()
+ testMethod5()
+ afterEach()
{static} + afterAll()

}


Class western.Cowboy{
- gains: int
- captures: HorsLaLoi[*]
+ getPseudo(): String
+ liberer(dame: Dame)
+ liberer(captives: Dame[*])
+ capturer(horsLaLoi: HorsLaLoi)
+ tirerSur(brigand: HorsLaLoi)
+ sePresenter()
{static} - boissonParDefaut: Boisson
{static} + getBoissonParDefaut(): Boisson
{static} + setBoissonParDefaut(boisson: Boisson)

}
western.Cowboy - western.HorsLaLoi
western.Cowboy -- western.Boisson

western.Cowboy ---|> western.Personnage
Class western.Dame{
- estLibre: boolean
- sauveur: Cowboy
- ravisseur: HorsLaLoi
+ getPseudo(): String
+ seFaireKidnapper(horsLaLoi: HorsLaLoi)
+ seFaireLiberer(cowBoy: Cowboy)
+ estLibre(): boolean
+ sePresenter()
{static} - boissonParDefaut: Boisson
{static} + getBoissonParDefaut(): Boisson
{static} + setBoissonParDefaut(boisson: Boisson)
+ getRavisseur(): HorsLaLoi

}
western.Dame -- western.Cowboy
western.Dame -- western.HorsLaLoi
western.Dame -- western.Boisson

western.Dame ---|> western.Personnage
Enum western.Genre<<enum>> {
FEMININ
MASCULIN

}
Class western.Histoire4{
{static} + main(args: String[])

}


Interface western.HorsLaLoi<<interface>> {
}
Class western.Narrateur{
+ dire(texte: String)
+ boire(boisson: Boisson)
+ boire()
+ getPseudo(): String

}

western.Narrateur ---|> western.Personnage
Interface western.Nommable<<interface>> {
}
Class western.Personnage{
<<<<<<< HEAD
[private, static] BOISSON_PAR_DEFAUT : western.Boisson
[private] nom : java.lang.String


[public] dire(texte: String)
[public] sePresenter()
[public] boire(boisson: Boisson)
[public] boire()
[public] getNom(): String
[public] getBoisson(): Boisson
static [public, static] getPseudos(personnages: Nommable[*]): String
static [public, static] getBoissonParDefaut(): Boisson
=======
{static} - BOISSON_PAR_DEFAUT: Boisson
- nom: String
- boisson: Boisson
+ dire(texte: String)
+ sePresenter()
+ boire(boisson: Boisson)
+ boire()
+ getNom(): String
+ getBoisson(): Boisson
{static} + getPseudos(personnages: Nommable[*]): String
{static} + getBoissonParDefaut(): Boisson
>>>>>>> 910add04dbaa3b146f072b8d754e5b8033cc22cf

}
western.Personnage -- western.Boisson
western.Personnage -- western.Boisson


Class western.Ripou{
- brigand: Brigand
+ getLook(): String
+ estLibre(): boolean
+ getRecompense(): int
+ kidnapper(dame: Dame)
+ getCaptives(): Dame[*]
+ seFaireCapturer(cowBoy: Cowboy)
+ seFaireTirerDessus(cowBoy: Cowboy)
+ getPseudo(): String
+ sePresenter()
+ liberer(dame: Dame)

}
western.Ripou -- western.Brigand

western.Ripou ---|> western.Cowboy
Class western.Substantif{
- nom: String
- genre: Genre
+ getNom(): String
+ getGenre(): Genre
+ toString(): String
{static} + isVowel(c: char): boolean
{static} + startsWithVowel(s: String): boolean
+ getArticleIndefini(): String
+ avecArticleIndefini(): String
{static} + getArticleDefini(genre: Genre): String
+ getArticleDefini(): String
+ avecArticleDefini(): String
{static} + faireElision(article: String): String
+ elision(): boolean
+ getArticlePartitif(): String
+ avecArticlePartitif(): String
+ avecElision(article: String): String
+ avecPreposition(preposition: String): String

}
western.Substantif -- western.Genre


Class western.test{

}



@enduml

