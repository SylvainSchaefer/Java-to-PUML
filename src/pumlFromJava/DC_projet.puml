@startuml
'https://plantuml.com/class-diagram
skinparam style strictuml
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
hide empty members

Class pumlFromJava.ClassPUML{
+ <<create>> ClassPUML(xel: Element)
+ getNomClasse(): String
+ getBody(): String
+ getBodyDCA(): String
+ getAssociations(): String
+ getAssociationsAllRel(): String
+ getAssociationsDCA(): String
+ getAssociationsDCA_AllRel(): String
+ isPrimitive(e: Element): Boolean
+ getSuperClassName(): String
+ getEnd(): String

}

pumlFromJava.ClassPUML ---|> pumlFromJava.GeneralClassUML
Class pumlFromJava.Constructor{
+ <<create>> Constructor(xEl: Element)



+ getConstructors(): String
+ getConstructorUML(): String

}


Interface pumlFromJava.DC<<interface>> {
{static} + getEn_tete(): String
{static} + getFin(): String
{abstract} + getUML(optionRel: OptionRel): String

}

Class pumlFromJava.DCA{
+ <<create>> DCA(Xcl: Element[*])

{static} + getEn_tete(): String
{static} + getFin(): String
+ getUML(optionRel: OptionRel): String

}
pumlFromJava.DCA --> pumlFromJava.OptionRel: getUML


Class pumlFromJava.DCC{
+ <<create>> DCC(Xcl: Element[*])

{static} + getEn_tete(): String
{static} + getFin(): String
+ getUML(optionRel: OptionRel): String

}
pumlFromJava.DCC --> pumlFromJava.OptionRel: getUML


Class pumlFromJava.EnumPUML{
+ <<create>> EnumPUML(xel: Element)

+ getNomClasse(): String
+ getBody(): String

}

pumlFromJava.EnumPUML ---|> pumlFromJava.GeneralClassUML
Class pumlFromJava.FieldUML{
+ <<create>> FieldUML(element: Element)

+ getName(): String
+ getType(): String
+ toString(): String
+ toStringDCA(): String

}


Class pumlFromJava.FirstDoclet{
+ <<create>> FirstDoclet()
+ init(locale: Locale, reporter: Reporter)
+ getName(): String
+ getSupportedOptions(): Option[*]
+ getSupportedSourceVersion(): SourceVersion
+ run(environment: DocletEnvironment): Boolean
- dumpElement(element: Element)

}


Class pumlFromJava.GeneralClassUML{
+ <<create>> GeneralClassUML(el: Element)

{abstract} + getNomClasse(): String
+ getEnd(): String
+ isInternal(element: TypeMirror): Boolean
{abstract} + getBody(): String
+ getElement(): Element

}


Class pumlFromJava.InterfacePUML{
+ <<create>> InterfacePUML(element: Element)

+ getNomClasse(): String
+ getBody(): String
+ getSuperInterfacesName(): String

}

pumlFromJava.InterfacePUML ---|> pumlFromJava.GeneralClassUML
Class pumlFromJava.Java2Puml{
+ <<create>> Java2Puml()
{static} + main(args: void)

}


Class pumlFromJava.MethodeUML{
+ <<create>> MethodeUML(element: Element)

+ getName(): String
+ getReturnType(): String
+ getParameters(): VariableElement[*]
+ isAbstract(): Boolean
+ isStatic(): Boolean
+ toString(): String

}


Class pumlFromJava.ModifierPUML{
+ <<create>> ModifierPUML(xel: Element)

+ getModifier(): String

}


Class pumlFromJava.OptionD{
+ <<create>> OptionD()

+ getArgumentCount(): Integer
+ getDescription(): String
+ getKind(): Kind
+ getNames(): String[*]
+ getParameters(): String
+ process(option: String, arguments: String[*]): Boolean
+ getChemin(): String

}


Class pumlFromJava.OptionDC{
+ <<create>> OptionDC()

+ getArgumentCount(): Integer
+ getDescription(): String
+ getKind(): Kind
+ getNames(): String[*]
+ getParameters(): String
+ process(option: String, arguments: String[*]): Boolean
+ getTypeDC(): String
+ isDCA(): Boolean

}


Class pumlFromJava.OptionOut{
+ <<create>> OptionOut()

+ getArgumentCount(): Integer
+ getDescription(): String
+ getKind(): Kind
+ getNames(): String[*]
+ getParameters(): String
+ process(option: String, arguments: String[*]): Boolean
+ getNomFichier(): String

}


Class pumlFromJava.OptionRel{
+ <<create>> OptionRel()

+ getArgumentCount(): Integer
+ getDescription(): String
+ getKind(): Kind
+ getNames(): String[*]
+ getParameters(): String
+ process(option: String, arguments: String[*]): Boolean
+ getTypeRel(): String
+ isAll(): Boolean

}


Class pumlFromJava.Parameter{
+ <<create>> Parameter(xEl: ExecutableElement)

+ getParametersUML(): String

}


Class pumlFromJava.PumlDoclet{
+ <<create>> PumlDoclet()




+ init(locale: Locale, reporter: Reporter)
+ getName(): String
+ getSupportedOptions(): Option[*]
+ getSupportedSourceVersion(): SourceVersion
+ run(environment: DocletEnvironment): Boolean
- creationUml(classes: Element[*])

}
pumlFromJava.PumlDoclet o-- "optionOut"pumlFromJava.OptionOut
pumlFromJava.PumlDoclet o-- "optionD"pumlFromJava.OptionD
pumlFromJava.PumlDoclet o-- "optionDC"pumlFromJava.OptionDC
pumlFromJava.PumlDoclet o-- "optionRel"pumlFromJava.OptionRel


Class pumlFromJava.Type{
+ <<create>> Type(xT: TypeMirror)

+ getType(): String
+ getSwitch(): String

}

Constructor <.... ClassPUML : <<use>>

FieldUML <.... Type : <<use>>
MethodeUML <.... Type : <<use>>
Parameter <.... Type : <<use>>

Parameter <.. Constructor : <<use>>
ModifierPUML <.. Constructor : <<use>>

FieldUML ..> ModifierPUML : <<use>>
MethodeUML ..> ModifierPUML : <<use>>

ClassPUML ..> MethodeUML : <<use>>

InterfacePUML ..>MethodeUML : <<use>>

DCA ..>InterfacePUML : <<use>>
DCC ..>InterfacePUML : <<use>>
DCA ..>EnumPUML : <<use>>
DCC ..>EnumPUML : <<use>>
DCA ..>ClassPUML : <<use>>
DCC ..>ClassPUML : <<use>>

Type ..>ClassPUML : <<use>>

ClassPUML ..>FieldUML : <<use>>

PumlDoclet ..>DCC : <<use>>
PumlDoclet ..>DCA : <<use>>





@enduml

